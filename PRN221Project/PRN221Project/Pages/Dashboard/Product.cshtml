@page
@model PRN221Project.Pages.Dashboard.InventoryModel
@{
}
<h1>Quản lý kho hàng</h1>
<div class="col-md-12">
    <div class="product-view-top">
        <form method="get">
            <div class="row">
                <div class="col-md-4">
                    <div class="product-search">
                        <input placeholder="Input name product" type="text" id="searchString" name="searchString">
                    </div>
                    <div class="product-short">
                        <select id="categoryId" name="categoryId" asp-for="SelectedCategoryId" asp-items="Model.CategoryOptions">
                            <option value="">All category</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <input class="btn" type="submit" value="Search and filter"></input>
                    <a class="btn" asp-page="/Dashboard/Product">Bỏ lọc và tìm kiếm</a>
                </div>
                
                <div class="col-md-4">
                    <a asp-page="/Dashboard/ProductAdd" class="btn btn-primary">Thêm sản phẩm</a>

                </div>
            </div>
        </form>
    </div>
</div>



<table class="table">
    <thead>
        <tr>
            <th>ID Sản phẩm</th>
            <th>Tên sản phẩm</th>
            <th>Số lượng</th>
            <th>Đơn giá</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.Quantity</td>
                <td>@product.UnitPrice</td>
                <td>
                    <a asp-page="ProductEdit" asp-route-id="@product.ProductId" class="btn btn-primary">Chỉnh sửa</a>
                    <a asp-page="ProductDelete" asp-route-id="@product.ProductId" class="btn btn-danger">Xóa</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Start -->
@{
    var currentPage = Model.Products.PageIndex;
    var totalPages = Model.Products.TotalPages;

    var prevDisabled = currentPage == 1 ? "disabled" : "";
    var nextDisabled = currentPage == totalPages ? "disabled" : "";

    var startPage = Math.Max(1, currentPage - 2);
    var endPage = Math.Min(startPage + 4, totalPages);
}

<div class="col-md-12">
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link"
                   asp-page-handler="OnGetAsync"
                   asp-route-pageIndex="@(currentPage - 1)"
                   asp-route-searchString="@Model.CurrentFilter"
                   asp-route-categoryId="@Model.SelectedCategoryId">Previous</a>
                </li>
            }
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item">
                    <a class="page-link @(i == currentPage ? "active" : "")" asp-page-handler="OnGetAsync"
                   asp-route-pageIndex="@i"
                   asp-route-searchString="@Model.CurrentFilter"
                   asp-route-categoryId="@Model.SelectedCategoryId">
                        @i
                    </a>
                </li>
            }
            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link"
                   asp-page-handler="OnGetAsync"
                   asp-route-pageIndex="@(currentPage + 1)"
                   asp-route-searchString="@Model.CurrentFilter"
                   asp-route-categoryId="@Model.SelectedCategoryId">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>
<!-- Pagination Start -->

